template: update-domain.tt

vars:
  domain: cheese.co.te
  nslist:
    - ns5.everydns.net
    - ns6.everydns.net
  nslist_old:
    - ns1.everydns.net

input_assertions:
  class: SRS::EPP::Command::Update::Domain
  count:
    - [ '//domain:name', 1, 'SRS: Check for the domain' ]
    - [ '//domain:add/domain:ns', 1, 'SRS: Check there is a new ns to add' ]
    - [ '//domain:rem/domain:ns', 1, 'SRS: Check there is an old ns to remove' ]
    - [ '//domain:add/domain:ns/domain:hostObj', 2, 'SRS: Two NSs to add' ]
    - [ '//domain:rem/domain:ns/domain:hostObj', 1, 'SRS: One NS to remove' ]
    - [ '//domain:hostObj', 3, 'SRS: Check there are three hostObjects in total' ]
  match:
    - [ '//domain:name', 'cheese.co.te', 'SRS: Check the domain name' ]
    - [ '//domain:add/domain:ns/domain:hostObj[1]', 'ns5.everydns.net', 'SRS: Check the new ns5' ]
    - [ '//domain:add/domain:ns/domain:hostObj[2]', 'ns6.everydns.net', 'SRS: Check the new ns6' ]
    - [ '//domain:rem/domain:ns/domain:hostObj', 'ns1.everydns.net', 'SRS: Check the old ns1 is gone' ]
  match_all:

SRS:

output_assertions:
  count:
    - [ '//epp:result', 1, 'SRS: Check for one result' ]
  attr_is:
    - [ '//epp:result', 'code', 1000, 'SRS: Check for correct result code' ]
